{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Statistics","className","s","statistics","this","props","good","neutral","bad","total","positivePercentage","Component","defaultProps","Notification","notification","message","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","btn","type","name","onClick","shortid","generate","App","state","e","newFeedback","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","countNoFeedback","objKey","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,MAAQ,yB,mBCA1BD,EAAOC,QAAU,CAAC,IAAM,+B,gMCElBC,E,4JAiBF,WACI,OACI,sBAAKC,UAAWC,IAAEC,WAAlB,UACI,4CACN,uCAAUC,KAAKC,MAAMC,QACvB,0CAAaF,KAAKC,MAAME,WACxB,sCAASH,KAAKC,MAAMG,OACpB,wCAAWJ,KAAKC,MAAMI,SACtB,oDAAuBL,KAAKC,MAAMK,mBAAlC,e,GAzBiBC,aAAnBX,EACKY,aAAe,CAClBN,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAyBbV,Q,iBC/BTa,E,4JASF,WACI,OAAO,oBAAIZ,UAAWC,IAAEY,aAAjB,SAAgCV,KAAKC,MAAMU,c,GAV/BJ,aAArBE,EACKD,aAAe,CAClBG,QAAS,KAYFF,Q,iBCAAG,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIjB,UAAWC,IAAEe,MAAjB,SAAyBA,IACxBC,M,kCCmBQC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEtB,UAAWC,IAAEsB,IAEbC,KAAK,SACLC,KAAMH,EACNI,QAASN,EALX,SAOGE,GALIK,IAAQC,kBCHjBC,E,4MACNC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAELa,gBAAkB,SAAAW,GAChB,IAAMC,EAAcD,EAAEE,OAAOR,KAC7B,EAAKS,UAAS,SAAAC,GAAS,sBACpBH,EAAcG,EAAUH,GAAe,O,EAK5CI,mBAAqB,WAGnB,OADQ,EAAKN,MAAMzB,KAAO,EAAKyB,MAAMxB,QAAU,EAAKwB,MAAMvB,K,EAG5D8B,gCAAkC,kBAChC,EAAKP,MAAMzB,KAAO,EAAK+B,qBAAuB,K,EAEhDE,gBAAkB,kBAA0B,IAApB,EAAKR,MAAMzB,MACN,IAAvB,EAAKyB,MAAMxB,SACQ,IAAnB,EAAKwB,MAAMvB,K,4CAEjB,WACE,IAAQa,EAA0FjB,KAA1FiB,gBAAiBgB,EAAyEjC,KAAzEiC,mBAAoBC,EAAqDlC,KAArDkC,gCAAiCC,EAAoBnC,KAApBmC,gBAC9E,EAA+BnC,KAAK2B,MAA5BzB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBgC,EAASC,OAAOC,KAAKtC,KAAK2B,OAChC,OACE,qCACA,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBG,QAASoB,EAAQnB,gBAAiBA,MAGnD,cAAC,EAAD,CAASJ,MAAM,aAAf,SACCsB,IAAqB,cAAC,EAAD,CAAcxB,QAAQ,sBACzC,cAAC,EAAD,CAAYT,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAO4B,IAAsB3B,mBAAoB4B,e,GAtC9F3B,aA+CHmB,I,MCjDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.47ea331a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1MRBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2nOGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3SM5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3epnO\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nclass Statistics extends Component {\r\n    static defaultProps = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        total: 0,\r\n        positivePercentage: 0\r\n    };\r\n\r\n     static propTypes = {\r\n         good: PropTypes.number,\r\n         neutral: PropTypes.number,\r\n         bad: PropTypes.number,\r\n         total: PropTypes.number,\r\n         totalPositive: PropTypes.number,\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.statistics}>\r\n                <h2>Statistics</h2>\r\n          <p>Good: {this.props.good}</p>\r\n        <p>Neutral: {this.props.neutral}</p>\r\n        <p>Bad: {this.props.bad}</p>\r\n        <p>Total: {this.props.total}</p>\r\n        <p>Positive feedback: {this.props.positivePercentage} %</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\nclass Notification extends Component {\r\n    static defaultProps = {\r\n        message: ' ',\r\n    };\r\n\r\n    static propTypes = {\r\n        message: PropTypes.string,\r\n    };\r\n\r\n    render() {\r\n        return <h2 className={s.notification}>{this.props.message}</h2>;\r\n    }\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\nimport shortid from 'shortid';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.btn}\r\n          key={shortid.generate()}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;","import './App.css';\nimport React from 'react';\nimport { Component } from 'react';\nimport Statistics from 'components/Statistics/Statistics';\nimport Notification from 'components/Notification/Notification';\nimport Section from 'components/Section/Section';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\n\nclass App extends Component {\nstate = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n}\n  onLeaveFeedback = e => {\n    const newFeedback = e.target.name;\n    this.setState(prevState => ({\n      [newFeedback]: prevState[newFeedback] + 1,\n    }));\n  };\n\n \n  countTotalFeedback = () => {\n    let total = 0;\n    total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => (\n    this.state.good / this.countTotalFeedback() * 100);\n  \n  countNoFeedback = () => this.state.good === 0 &&\n        this.state.neutral === 0 &&\n        this.state.bad === 0 ? true  : false;\n\n  render() {\n    const { onLeaveFeedback, countTotalFeedback, countPositiveFeedbackPercentage, countNoFeedback } = this;\n    const { good, neutral, bad } = this.state;\n    const objKey = Object.keys(this.state);\n    return (\n      <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={objKey} onLeaveFeedback={onLeaveFeedback}/>\n      </Section>\n        \n        <Section title=\"Statistics\">\n        {countNoFeedback() ? (<Notification message=\"No feedback given\"/>) :\n          (<Statistics good={good} neutral={neutral} bad={bad} total={countTotalFeedback()} positivePercentage={countPositiveFeedbackPercentage()} />)\n        }\n        </Section>\n        </>\n        )\n  }\n}\n\n\nexport default App;\n\n// <button type=\"button\" className=\"button__good\" onClick={onLeaveFeedback}>\n        //   Good\n        // </button>\n        // <button type=\"button\" className=\"button__neutral\" onClick={onLeaveFeedback}>\n        //   Neutral\n        // </button>\n        // <button type=\"button\" className=\"button__bad\" onClick={onLeaveFeedback}>\n        //   Bad\n        // </button> *//\n\n\n         // handleIncrGood = () => { this.setState(prevState => ({\n  //     good: prevState.good + 1,\n  // }))\n  // };\n  // handleIncrNeutral = () => { this.setState(prevState => ({\n  //     neutral: prevState.neutral + 1,\n  // }))\n  // };\n  // handleIncrBad  = () => { this.setState(prevState => ({\n  //     bad: prevState.bad + 1,\n  // }))\n  // };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}